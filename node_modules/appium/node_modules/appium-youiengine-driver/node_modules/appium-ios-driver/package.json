{
  "_args": [
    [
      {
        "raw": "appium-ios-driver@https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
        "scope": null,
        "escapedName": "appium-ios-driver",
        "name": "appium-ios-driver",
        "rawSpec": "https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
        "spec": "https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
        "type": "remote"
      },
      "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium\\node_modules\\appium-youiengine-driver"
    ]
  ],
  "_from": "appium-ios-driver@https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
  "_id": "appium-ios-driver@2.13.2",
  "_inCache": true,
  "_location": "/appium/appium-youiengine-driver/appium-ios-driver",
  "_phantomChildren": {},
  "_requested": {
    "raw": "appium-ios-driver@https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
    "scope": null,
    "escapedName": "appium-ios-driver",
    "name": "appium-ios-driver",
    "rawSpec": "https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
    "spec": "https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium/appium-youiengine-driver"
  ],
  "_resolved": "https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
  "_shasum": "d364c46db0e71294219906b09c0f3627f5566460",
  "_shrinkwrap": null,
  "_spec": "appium-ios-driver@https://registry.npmjs.org/appium-ios-driver/-/appium-ios-driver-2.13.2.tgz",
  "_where": "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium\\node_modules\\appium-youiengine-driver",
  "author": {
    "name": "appium"
  },
  "bin": {
    "xcode-iwd": "./bin/xcode-iwd.sh"
  },
  "bugs": {
    "url": "https://github.com/appium/appium-ios-driver/issues"
  },
  "dependencies": {
    "@babel/runtime": "^7.0.0",
    "appium-base-driver": "^3.0.0",
    "appium-ios-simulator": "^3.0.0",
    "appium-remote-debugger": "^3.20.0",
    "appium-support": "^2.25.0",
    "appium-xcode": "^3.1.0",
    "asyncbox": "^2.3.1",
    "bluebird": "^3.5.1",
    "colors": "^1.1.2",
    "js2xmlparser2": "^0.2.0",
    "lodash": "^4.13.1",
    "moment": "^2.22.2",
    "node-idevice": "^0.1.6",
    "node-simctl": "^3.11.5",
    "pem": "^1.8.3",
    "portfinder": "^1.0.13",
    "request": "^2.79.0",
    "request-promise": "^4.1.1",
    "safari-launcher": "^2.0.5",
    "source-map-support": "^0.5.5",
    "teen_process": "^1.6.0",
    "through": "^2.3.8",
    "uuid-js": "^0.7.5",
    "xmldom": "^0.1.22",
    "xpath": "^0.0.24",
    "yargs": "^12.0.1"
  },
  "description": "Appium driver for iOS",
  "devDependencies": {
    "ajv": "^6.5.3",
    "appium-gulp-plugins": "^3.1.0",
    "appium-test-support": "^1.0.0",
    "babel-eslint": "^10.0.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^7.1.1",
    "eslint": "^5.2.0",
    "eslint-config-appium": "^3.1.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-mocha": "^5.0.0",
    "eslint-plugin-promise": "^4.0.0",
    "gulp": "^4.0.0",
    "mocha": "^5.1.1",
    "pre-commit": "^1.1.3",
    "sinon": "^6.0.0",
    "unorm": "^1.4.1",
    "uuid": "^3.3.2"
  },
  "directories": {
    "lib": "lib"
  },
  "engines": [
    "node"
  ],
  "files": [
    "index.js",
    "bin",
    "build/index.js",
    "build/lib",
    "uiauto",
    "osa",
    "instruments-iwd",
    "!instruments-iwd/*/TestApp*"
  ],
  "greenkeeper": {
    "ignore": [
      "chai",
      "xpath"
    ]
  },
  "homepage": "https://github.com/appium/appium-ios-driver#readme",
  "keywords": [
    "appium",
    "ios",
    "ui automation",
    "instruments"
  ],
  "license": "Apache-2.0",
  "main": "./build/index.js",
  "name": "appium-ios-driver",
  "optionalDependencies": {},
  "pre-commit": [
    "precommit-msg",
    "precommit-test"
  ],
  "readme": "# Appium iOS Driver\n\n[![NPM version](http://img.shields.io/npm/v/appium-ios-driver.svg)](https://npmjs.org/package/appium-ios-driver)\n[![Downloads](http://img.shields.io/npm/dm/appium-ios-driver.svg)](https://npmjs.org/package/appium-ios-driver)\n[![Dependency Status](https://david-dm.org/appium/appium-ios-driver/master.svg)](https://david-dm.org/appium/appium-ios-driver/)\n[![devDependency Status](https://david-dm.org/appium/appium-ios-driver/master/dev-status.svg)](https://david-dm.org/appium/appium-ios-driver/master#info=devDependencies)\n\n[![Build Status](https://travis-ci.org/appium/appium-ios-driver.svg)](https://travis-ci.org/appium/appium-ios-driver)\n[![Coverage Status](https://coveralls.io/repos/appium/appium-ios-driver/badge.svg?branch=master&service=github)](https://coveralls.io/github/appium/appium-ios-driver?branch=master) [![Greenkeeper badge](https://badges.greenkeeper.io/appium/appium-ios-driver.svg)](https://greenkeeper.io/)\n\n\nAppium iOS Driver is a test automation tool for iOS devices up to an including\niOS 9.3. Appium iOS Driver automates native, hybrid and mobile web apps, tested\non simulators and real devices, using Apples' [UI Automation framework](uiauto.md).\nAppium iOS Driver is part of the [Appium](https://github.com/appium/appium)\nmobile test automation tool.\n\nTo automation iOS devices with a version of iOS greater than 9.3, see [appium-xcuitest-driver](https://github.com/appium/appium-xcuitest-driver).\n\n*Note*: Issue tracking for this repo has been disabled. Please use the [main Appium issue tracker](https://github.com/appium/appium/issues) instead.\n\n## iOS Support\nAppium iOS Driver supports iOS versions 8+\n\n## Installation\n```bash\nnpm install appium-ios-driver\n```\n\n## Usage\nImport iOS Driver, set [desired capabilities](http://appium.io/slate/en/1.5/?javascript#appium-server-capabilities) and create a session:\n\n```js\nimport { IosDriver } from `appium-ios-driver`\n\nlet defaultCaps = {\n  app: 'path/to/your.app',\n  platformName: 'iOS',\n  deviceName: 'iPhone 6'\n};\n\nlet driver = new IosDriver();\nawait driver.createSession(defaultCaps);\n```\nRun commands:\n```js\nawait driver.setOrientation('LANDSCAPE');\nconsole.log(await driver.getOrientation()); // -> 'LANDSCAPE'\n```\n\n## Commands\n|          Command           |\n|----------------------------|\n| `active`                          |\n| `asyncScriptTimeout`              |\n| `back`                            |\n| `background`                      |\n| `checkForAlert`                   |\n| `clear`                           |\n| `click`                           |\n| `clickButtonToLaunchSafari`       |\n| `clickCoords`                     |\n| `clickCurrent`                    |\n| `clickWebCoords`                  |\n| `closeAlertBeforeTest`            |\n| `closeApp`                        |\n| `closeWindow`                     |\n| `convertElementsForAtoms`         |\n| `deleteCookie`                    |\n| `deleteCookies`                   |\n| `elementDisplayed`                |\n| `elementEnabled`                  |\n| `elementSelected`                 |\n| `execute`                         |\n| `executeAsync`                    |\n| `executeAtom`                     |\n| `executeAtomAsync`                |\n| `executeMobile`                   |\n| `findElOrEls`                     |\n| `findUIElementOrElements`         |\n| `findUIElementsByXpath`           |\n| `findWebElementOrElements`        |\n| `flick`                           |\n| `flickElement`                    |\n| `forward`                         |\n| `getAlertText`                    |\n| `getAtomsElement`                 |\n| `getAttribute`                    |\n| `getContexts`                     |\n| `getContextsAndViews`             |\n| `getCookies`                      |\n| `getCssProperty`                  |\n| `getCurrentContext`               |\n| `getDeviceTime`                   |\n| `getLatestWebviewContextForTitle` |\n| `getLocation`                     |\n| `getLocationInView`               |\n| `getLog`                          |\n| `getLogTypes`                     |\n| `getName`                         |\n| `getOrientation`                  |\n| `getPageSource`                   |\n| `getScreenshot`                   |\n| `getSimFileFullPath`              |\n| `getSize`                         |\n| `getText`                         |\n| `getUrl`                          |\n| `getWindowHandle`                 |\n| `getWindowHandles`                |\n| `getWindowSize`                   |\n| `getWindowRect`                   |\n| `handleTap`                       |\n| `hideKeyboard`                    |\n| `initAutoWebview`                 |\n| `isWebContext`                    |\n| `keys`                            |\n| `launchApp`                       |\n| `listWebFrames`                   |\n| `lock`                            |\n| `mobileRotation`                  |\n| `mobileScroll`                    |\n| `mobileShake`                     |\n| `mobileWebNav`                    |\n| `moveTo`                          |\n| `nativeTap`                       |\n| `nativeWebTap`                    |\n| `navToInitialWebview`             |\n| `navToViewThroughFavorites`       |\n| `navToViewWithTitle`              |\n| `onPageChange`                    |\n| `parseElementResponse`            |\n| `parseExecuteResponse`            |\n| `parseTouch`                      |\n| `performMultiAction`              |\n| `performTouch`                    |\n| `postAcceptAlert`                 |\n| `postDismissAlert`                |\n| `pullFile`                        |\n| `pullFolder`                      |\n| `pushFile`                        |\n| `receiveAsyncResponse`            |\n| `refresh`                         |\n| `setAlertText`                    |\n| `setContext`                      |\n| `setCookie`                       |\n| `setFrame`                        |\n| `setGeoLocation`                  |\n| `setOrientation`                  |\n| `setUrl`                          |\n| `setValue`                        |\n| `setValueImmediate`               |\n| `setWindow`                       |\n| `stopRemote`                      |\n| `submit`                          |\n| `title`                           |\n| `translateWebCoords`              |\n| `typeAndNavToUrl`                 |\n| `useAtomsElement`                 |\n| `useNewSafari`                    |\n| `waitForAtom`                     |\n| `webContextIndex`                 |\n| `webFlickElement`                 |\n| `xySpeedFlick`                    |\n\n\n## Watch code for changes, re-transpile and run unit tests:\n\n```bash\ngulp watch\n```\n\n## Test\n\nFor tests, the default sims required are an iOS 9.2 iPhone 6 and iPad 2, which you can create as follows if one doesn't already exist on your system (use `xcrun simctl list` to check first):\n\n```bash\nxcrun simctl create \"iPhone 6\" \"iPhone 6\" 9.2\nxcrun simctl create \"iPad 2\" \"iPad 2\" 9.2\n```\n\nThen you can run unit and e2e tests:\n\n```bash\n// unit tests:\ngulp once\n\n// e2e tests - specify your desired iOS version, for example iOS8.4:\nDEVICE=ios84 gulp e2e-test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/appium/appium-ios-driver.git"
  },
  "scripts": {
    "build": "gulp transpile",
    "clean": "rm -rf node_modules && rm -f package-lock.json && npm install",
    "coverage": "gulp coveralls",
    "e2e-test": "gulp e2e-test",
    "lint": "gulp eslint",
    "lint:fix": "gulp eslint --fix",
    "mocha": "mocha",
    "precommit-msg": "echo 'Pre-commit checks...' && exit 0",
    "precommit-test": "REPORTER=dot gulp once",
    "prepare": "gulp prepublish",
    "test": "gulp once",
    "watch": "gulp watch"
  },
  "version": "2.13.2"
}
