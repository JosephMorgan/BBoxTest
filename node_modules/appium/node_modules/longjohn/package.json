{
  "_args": [
    [
      {
        "raw": "longjohn@https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
        "scope": null,
        "escapedName": "longjohn",
        "name": "longjohn",
        "rawSpec": "https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
        "spec": "https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
        "type": "remote"
      },
      "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium"
    ]
  ],
  "_from": "longjohn@https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
  "_id": "longjohn@0.2.12",
  "_inCache": true,
  "_location": "/appium/longjohn",
  "_phantomChildren": {},
  "_requested": {
    "raw": "longjohn@https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
    "scope": null,
    "escapedName": "longjohn",
    "name": "longjohn",
    "rawSpec": "https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
    "spec": "https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium"
  ],
  "_resolved": "https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
  "_shasum": "7ca7446b083655c377e7512213dc754d52a64a7e",
  "_shrinkwrap": null,
  "_spec": "longjohn@https://registry.npmjs.org/longjohn/-/longjohn-0.2.12.tgz",
  "_where": "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium",
  "author": {
    "name": "Matt Insler",
    "email": "matt.insler@gmail.com",
    "url": "http://www.mattinsler.com"
  },
  "bugs": {
    "url": "https://github.com/mattinsler/longjohn/issues"
  },
  "dependencies": {
    "source-map-support": "0.3.2 - 1.0.0"
  },
  "description": "Long stack traces for node.js inspired by https://github.com/tlrobinson/long-stack-traces",
  "devDependencies": {
    "coffee-script": "1.12.2",
    "grunt": "0.4.5",
    "grunt-cli": "1.2.0",
    "grunt-contrib-coffee": "0.7.0",
    "mocha": "3.2.0"
  },
  "engines": {
    "node": ">= 0.9.3"
  },
  "homepage": "https://github.com/mattinsler/longjohn",
  "keywords": [],
  "license": "MIT",
  "main": "dist/longjohn",
  "name": "longjohn",
  "optionalDependencies": {},
  "readme": "# longjohn\n\nLong stack traces for [node.js](http://nodejs.org/) with configurable call trace length\n\n## Inspiration\n\nI wrote this while trying to add [long-stack-traces](https://github.com/tlrobinson/long-stack-traces) to my server and realizing that there were issues with support of [EventEmitter::removeListener](http://nodejs.org/api/events.html#events_emitter_removelistener_event_listener).  The node HTTP Server will begin to leak callbacks and any of your own code that relies on removing listeners would not work as anticipated.\n\nSo what to do...  I stole the code and rewrote it.  I've added support for removeListener along with the ability to cut off the number of async calls the library will trace.  I hope you like it!\n\nPlease thank [tlrobinson](https://github.com/tlrobinson) for the initial implementation!\n\n## Production Use\n\nLongjohn collects a large amount of data in order to provide useful stack traces. While it is very helpful in\ndevelopment and testing environments, it is not recommended to use longjohn in production. The data collection puts\na lot of strain on V8's garbage collector and can greatly slow down heavily-loaded applications.\n\n## Installation\n\nJust npm install it!\n\n```bash\n$ npm install longjohn\n```\n\n## Usage\n\nTo use longjohn, require it in your code (probably in some initialization code).  That's all!\n\n```javascript\nif (process.env.NODE_ENV !== 'production'){\n  require('longjohn');\n}\n\n// ... your code\n```\n\n## Options\n\n#### Limit traced async calls\n\n```javascript\nlongjohn.async_trace_limit = 5;   // defaults to 10\nlongjohn.async_trace_limit = -1;  // unlimited\n```\n\n#### Change callback frame text\n\n```javascript\nlongjohn.empty_frame = 'ASYNC CALLBACK';  // defaults to '---------------------------------------------'\n```\n\n## Use with Source Maps\n\nAs of version 0.2.9 longjonn supports source maps. Just compile your code down to\njavascript with source map support and run like normal.\n\nFor coffee-script, this would look like:\n\n```bash\n$ coffee --map --compile script.coffee\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mattinsler/longjohn.git"
  },
  "scripts": {
    "test": "node_modules/mocha/bin/mocha --compilers coffee:coffee-script/register -R spec"
  },
  "version": "0.2.12"
}
