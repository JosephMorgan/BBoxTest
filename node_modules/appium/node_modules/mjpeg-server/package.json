{
  "_args": [
    [
      {
        "raw": "mjpeg-server@https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
        "scope": null,
        "escapedName": "mjpeg-server",
        "name": "mjpeg-server",
        "rawSpec": "https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
        "spec": "https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
        "type": "remote"
      },
      "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium"
    ]
  ],
  "_from": "mjpeg-server@https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
  "_id": "mjpeg-server@0.3.0",
  "_inCache": true,
  "_location": "/appium/mjpeg-server",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mjpeg-server@https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
    "scope": null,
    "escapedName": "mjpeg-server",
    "name": "mjpeg-server",
    "rawSpec": "https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
    "spec": "https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/appium-support"
  ],
  "_resolved": "https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
  "_shasum": "af1de13f75642708ba6ec170dfac408bdc5d9737",
  "_shrinkwrap": null,
  "_spec": "mjpeg-server@https://registry.npmjs.org/mjpeg-server/-/mjpeg-server-0.3.0.tgz",
  "_where": "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium",
  "author": {
    "name": "Brandon Cheng",
    "email": "gluxon@gluxon.com"
  },
  "bugs": {
    "url": "https://github.com/gluxon/node-mjpeg-server/issues"
  },
  "dependencies": {},
  "description": "Serve multiple jpgs as an mjpeg stream",
  "devDependencies": {},
  "engines": {
    "node": ">=0.10"
  },
  "homepage": "https://github.com/gluxon/node-mjpeg-server#readme",
  "license": "MIT",
  "main": "./lib/mpegserver",
  "name": "mjpeg-server",
  "optionalDependencies": {},
  "readme": "# mjpeg-server\n\nServe an mjpeg stream on a specified port through HTTP from multiple jpgs.\n\n## Methods\n\n### mjpegServer.createReqHandler(req, res)\n\nCreates a request handler object with parameters from http.createServer.\n\n``` javascript\nvar http = require('http');\nvar mjpegServer = require('..');\n\nhttp.createServer(function(req, res) {\n\tmjpegReqHandler = mjpegServer.createReqHandler(req, res);\n}).listen(8081);\n```\n\n### mjpegServer.update(data)\n\nUpdate the stream\n\n``` javascript\nmjpegReqHandler = mjpegServer.createReqHandler(req, res);\nmjpegReqHandler.update(randomJpeg37);\n```\n\n### mjpegServer.close()\n\nCalls res.end\n\n## Changelog\n\n#### 0.3\n- Use streams2 in Node.js v.10\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gluxon/node-mjpeg-server.git"
  },
  "version": "0.3.0"
}
