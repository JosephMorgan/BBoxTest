{
  "_args": [
    [
      {
        "raw": "@jimp/plugin-contain@https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
        "scope": "@jimp",
        "escapedName": "@jimp%2fplugin-contain",
        "name": "@jimp/plugin-contain",
        "rawSpec": "https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
        "spec": "https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
        "type": "remote"
      },
      "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium"
    ]
  ],
  "_from": "@jimp/plugin-contain@https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
  "_id": "@jimp/plugin-contain@0.6.4",
  "_inCache": true,
  "_location": "/appium/@jimp/plugin-contain",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@jimp/plugin-contain@https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
    "scope": "@jimp",
    "escapedName": "@jimp%2fplugin-contain",
    "name": "@jimp/plugin-contain",
    "rawSpec": "https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
    "spec": "https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/@jimp/plugins"
  ],
  "_resolved": "https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
  "_shasum": "ee2cc03a066cc1ec9dcb2a5c6cdbbfb80af42d05",
  "_shrinkwrap": null,
  "_spec": "@jimp/plugin-contain@https://registry.npmjs.org/@jimp/plugin-contain/-/plugin-contain-0.6.4.tgz",
  "_where": "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium",
  "author": "",
  "dependencies": {
    "@jimp/utils": "^0.6.4",
    "core-js": "^2.5.7"
  },
  "description": "contain an image.",
  "devDependencies": {
    "@jimp/custom": "^0.6.4",
    "@jimp/plugin-blit": "^0.6.4",
    "@jimp/plugin-resize": "^0.6.4",
    "@jimp/plugin-scale": "^0.6.4",
    "@jimp/test-utils": "^0.6.4"
  },
  "gitHead": "7c9d3c817cade88d4a20422be10670d3c1528429",
  "license": "MIT",
  "main": "dist/index.js",
  "module": "es/index.js",
  "name": "@jimp/plugin-contain",
  "optionalDependencies": {},
  "peerDependencies": {
    "@jimp/custom": ">=0.3.5",
    "@jimp/plugin-blit": ">=0.3.5",
    "@jimp/plugin-resize": ">=0.3.5",
    "@jimp/plugin-scale": ">=0.3.5"
  },
  "publishConfig": {
    "access": "public"
  },
  "readme": "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://s3.amazonaws.com/pix.iemoji.com/images/emoji/apple/ios-11/256/crayon.png\">\n  <h1>@jimp/plugin-contain</h1>\n  <p>Contain an image within a height and width.</p>\n</div>\n\nScale the image to the given width and height keeping the aspect ratio. Some parts of the image may be letter boxed.\n\n## Usage\n\n- @param {number} w the width to resize the image to\n- @param {number} h the height to resize the image to\n- @param {number} alignBits (optional) A bitmask for horizontal and vertical alignment\n- @param {string} mode (optional) a scaling method (e.g. Jimp.RESIZE_BEZIER)\n- @param {function(Error, Jimp)} cb (optional) a callback for when complete\n\n```js\nimport jimp from 'jimp';\n\nasync function main() {\n  const image = await jimp.read('test/image.png');\n\n  image.contain(150, 100);\n}\n\nmain();\n```\n\n### Align modes\n\nThe following constants can be passed to `image.contain`:\n\n```js\nJimp.HORIZONTAL_ALIGN_LEFT;\nJimp.HORIZONTAL_ALIGN_CENTER;\nJimp.HORIZONTAL_ALIGN_RIGHT;\n\nJimp.VERTICAL_ALIGN_TOP;\nJimp.VERTICAL_ALIGN_MIDDLE;\nJimp.VERTICAL_ALIGN_BOTTOM;\n```\n\nFor example:\n\n```js\nimage.contain(250, 250, Jimp.HORIZONTAL_ALIGN_LEFT | Jimp.VERTICAL_ALIGN_TOP);\nimage.contain(\n  250,\n  250,\n  Jimp.HORIZONTAL_ALIGN_RIGHT | Jimp.VERTICAL_ALIGN_BOTTOM\n);\n```\n\nDefault align mode for `image.contain` is:\n\n```js\nJimp.HORIZONTAL_ALIGN_CENTER | Jimp.VERTICAL_ALIGN_MIDDLE;\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "build": "npm run build:node:production && npm run build:module",
    "build:debug": "npm run build:node:debug",
    "build:module": "cross-env BABEL_ENV=module babel src -d es --source-maps --config-file ../../babel.config.js",
    "build:node": "babel src -d dist --source-maps --config-file ../../babel.config.js",
    "build:node:debug": "cross-env BABEL_ENV=development npm run build:node",
    "build:node:production": "cross-env BABEL_ENV=production npm run build:node",
    "build:watch": "npm run build:node:debug -- -- --watch --verbose",
    "test": "cross-env BABEL_ENV=test mocha --require @babel/register",
    "test:coverage": "nyc npm run test",
    "test:watch": "npm run test -- --reporter min --watch"
  },
  "version": "0.6.4"
}
