{
  "_args": [
    [
      {
        "raw": "appium-chromedriver@https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
        "scope": null,
        "escapedName": "appium-chromedriver",
        "name": "appium-chromedriver",
        "rawSpec": "https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
        "spec": "https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
        "type": "remote"
      },
      "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium"
    ]
  ],
  "_from": "appium-chromedriver@https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
  "_id": "appium-chromedriver@4.11.0",
  "_inCache": true,
  "_location": "/appium/appium-chromedriver",
  "_phantomChildren": {},
  "_requested": {
    "raw": "appium-chromedriver@https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
    "scope": null,
    "escapedName": "appium-chromedriver",
    "name": "appium-chromedriver",
    "rawSpec": "https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
    "spec": "https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/appium-android-driver"
  ],
  "_resolved": "https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
  "_shasum": "a4addd00295fde5575c2f21a0758af56ee4456b4",
  "_shrinkwrap": null,
  "_spec": "appium-chromedriver@https://registry.npmjs.org/appium-chromedriver/-/appium-chromedriver-4.11.0.tgz",
  "_where": "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium",
  "author": {
    "name": "appium"
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/appium/appium-chromedriver/issues"
  },
  "dependencies": {
    "@babel/runtime": "^7.0.0",
    "appium-base-driver": "^3.0.0",
    "appium-support": "^2.8.0",
    "asyncbox": "^2.0.2",
    "bluebird": "^3.5.1",
    "fancy-log": "^1.3.2",
    "lodash": "^4.17.4",
    "request": "^2.57.0",
    "request-promise": "^4.2.2",
    "semver": "^5.5.0",
    "source-map-support": "^0.5.5",
    "teen_process": "^1.3.1"
  },
  "description": "Node.js wrapper around chromedriver.",
  "devDependencies": {
    "ajv": "^6.5.3",
    "appium-gulp-plugins": "^3.1.0",
    "babel-eslint": "^10.0.0",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "eslint": "^5.2.0",
    "eslint-config-appium": "^4.0.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-mocha": "^5.0.0",
    "eslint-plugin-promise": "^4.0.0",
    "gulp": "^4.0.0",
    "mocha": "^6.0.0",
    "pre-commit": "^1.1.3",
    "sinon": "^7.2.3"
  },
  "directories": {
    "lib": "lib"
  },
  "engines": [
    "node"
  ],
  "files": [
    "index.js",
    "install-npm.js",
    "lib",
    "build/index.js",
    "build/install-npm.js",
    "build/lib"
  ],
  "greenkeeper": {
    "ignore": []
  },
  "homepage": "https://github.com/appium/appium-chromedriver#readme",
  "keywords": [
    "appium",
    "chrome",
    "android"
  ],
  "license": "Apache-2.0",
  "main": "./build/index.js",
  "name": "appium-chromedriver",
  "optionalDependencies": {},
  "pre-commit": [
    "precommit-msg",
    "precommit-test"
  ],
  "readme": "[![Build Status](https://travis-ci.org/appium/appium-chromedriver.svg)](https://travis-ci.org/appium/appium-chromedriver) [![Coverage Status](https://coveralls.io/repos/appium/appium-chromedriver/badge.svg?branch=master&service=github)](https://coveralls.io/github/appium/appium-chromedriver?branch=master)\n[![Greenkeeper badge](https://badges.greenkeeper.io/appium/appium-chromedriver.svg)](https://greenkeeper.io/)\n\nappium-chromedriver\n===================\n\nNode.js wrapper around [Chromedriver](https://sites.google.com/a/chromium.org/chromedriver/)\n\nIssues for this repo are disabled. Log any issues at the [main Appium repo's issue tracker](https://github.com/appium/appium/issues).\n\n## Local installation\n\nBecause of the oddities of `npm`'s lifecycle hooks, installing locally the first time _will_ fail, saying `Project does not appear to built yet. Please run `gulp transpile` first.`. This is because we transpile in the `prepublish` phase, but run the install script in the `install` phase. Any other way would make development dependencies necessary on user's machines, or make the binary not install, unfortunately.\n\nThe solution, however, is simple. Simple run `gulp transpile` and then `npm install`. The former will build the project and the latter will simply install the binary.\n\n\n## Usage\n\n```js\nimport Chromedriver from 'appium-chromedriver';\n\n// 'sync'-like await/Promise usage\nasync function runSession() {\n    let driver = new Chromedriver();\n    const desiredCaps = {browserName: 'chrome'};\n    await driver.start(desiredCaps);\n    let status = await driver.sendCommand('/status', 'GET');\n    await driver.stop();\n}\n\n// EventEmitter usage\nfunction runSession2() {\n    let driver = new Chromedriver();\n    const desiredCaps = {browserName: 'chrome'};\n    driver.start(desiredCaps);\n    driver.on(Chromedriver.EVENT_CHANGED, function (msg) {\n        if (msg.state === Chromedriver.STATE_ONLINE) {\n            driver.sendCommand('/status', 'GET').then(function (status) {\n                driver.stop();\n            });\n        }\n    });\n    driver.on(Chromedriver.EVENT_ERROR, function (err) {\n        // :-(\n    });\n}\n```\n\n## States\n\nHere's what the Chromedriver state machine looks like:\n\n![Chromedriver States](./doc/states.png)\n\nHere are the events you can listen for:\n\n* `Chromedriver.EVENT_ERROR`: gives you an error object\n* `Chromedriver.EVENT_CHANGED`: gives you a state change object, with a `state` property that can be one of:\n    * `Chromedriver.STATE_STOPPED`\n    * `Chromedriver.STATE_STARTING`\n    * `Chromedriver.STATE_ONLINE`\n    * `Chromedriver.STATE_STOPPING`\n    * `Chromedriver.STATE_RESTARTING`\n\n## Custom Chromedriver version\n\nTo use a version of Chromedriver not set in the code, use npm config property `chromedriver_version`.\n\n```bash\nnpm install appium-chromedriver --chromedriver_version=\"2.16\"\n```\n\nOr add the property into your [`.npmrc`](https://docs.npmjs.com/files/npmrc) file.\n\n```bash\nchromedriver_version=2.16\n```\n\n## Custom binaries url\n\nTo use a mirror of the ChromeDriver binaries use npm config property `chromedriver_cdnurl`.\nDefault is `http://chromedriver.storage.googleapis.com`.\n\n```bash\nnpm install appium-chromedriver --chromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver\n```\n\nOr add the property into your [`.npmrc`](https://docs.npmjs.com/files/npmrc) file.\n\n```bash\nchromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver\n```\n\nAnother option is to use PATH variable `CHROMEDRIVER_CDNURL`.\n\n```bash\nCHROMEDRIVER_CDNURL=http://npm.taobao.org/mirrors/chromedriver npm install appium-chromedriver\n```\n\n## Dev\n\nWe use Gulp for building/transpiling.\n\n### Watch\n\n```\nnpm run watch\n```\n\n### Run Tests\n\n```\nnpm test\n```\n\n## Upgrading Chromedriver Version\n\nWhen a new [Chromedriver](http://chromedriver.chromium.org/) version is released,\nthe details will be [here](http://chromedriver.chromium.org/downloads). Which\nChromedriver this package selects is based on the `CHROMEDRIVER_CHROME_MAPPING`\nin `lib/chromedriver`.\n\nTo add a new entry, you must know the Chromedriver version and the minimum version\nof Chrome which it is capable of automating. Starting with Chromedriver\n[2.46](https://chromedriver.storage.googleapis.com/index.html?path=2.46/) the\nexecutable has a command line flag `--minimum-chrome-version` to get the latter.\nSo, you just need to download the Chromedriver version, and then run it\n```\npath/to/chromedriver[.exe] --minimum-chrome-version\n```\nThe output will be something like `minimum supported Chrome version: 71.0.3578.0`.\n\nAdd a new entry to the top of `CHROMEDRIVER_CHROME_MAPPING` in `lib/chromedriver`,\nconsisting of the version of Chromedriver and the first three parts of the\nminimum Chrome version.\n\nIf the command line flag is not available, the minimum Chrome version can be\nobtained by attempting to run a session against a low version of Chrome. In one\nshell run Chromedriver\n```shell\npath/to/chromedriver[.exe] --verbose\n```\nAnd in anther shell, create a session by running the [curl](https://curl.haxx.se/)\ncommand\n```shell\ncurl \\\n  -d '{\"desiredCapabilities\":{\"chromeOptions\":{\"androidPackage\":\"com.android.chrome\",\"androidDeviceSerial\":\"emulator-5554\"}}}' \\\n  -H \"Content-Type: application/json\" \\\n  -XPOST http://localhost:9515/session\n```\nThis **will** fail, but in the error message will be the actual minimum Chrome\nversion for this version of Chromedriver:\n```json\n{\n  \"sessionId\": \"55dcde971731f3d1ce04b54d7664069c\",\n  \"status\": 33,\n  \"value\": {\n    \"message\": \"session not created: Chrome version must be >= 68.0.3440.0\\n  (Driver info: chromedriver=2.42.591059 (a3d9684d10d61aa0c45f6723b327283be1ebaad8),platform=Mac OS X 10.13.6 x86_64)\"\n  }\n}\n```\nTake the number (e.g., here, `68.0.3440.0`) and put the first three parts\n(`68.0.3440`) into the `CHROMEDRIVER_CHROME_MAPPING` along with the version of\nChromedriver being added.\n\nCommit, push, and pull request!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/appium/appium-chromedriver.git"
  },
  "scripts": {
    "build": "gulp transpile",
    "chromedriver": "node install-npm.js",
    "chromedriver_all": "node install-npm.js --all",
    "clean": "rm -rf node_modules && rm -f package-lock.json && npm install",
    "coverage": "gulp coveralls",
    "e2e-test": "gulp e2e-test",
    "install": "node install-npm.js",
    "lint": "gulp eslint",
    "lint:fix": "gulp eslint --fix",
    "precommit-msg": "echo 'Pre-commit checks...' && exit 0",
    "precommit-test": "REPORTER=dot gulp once",
    "prepare": "gulp prepublish",
    "test": "gulp once",
    "watch": "gulp watch"
  },
  "version": "4.11.0"
}
