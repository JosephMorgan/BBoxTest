{
  "_args": [
    [
      {
        "raw": "on-headers@https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
        "scope": null,
        "escapedName": "on-headers",
        "name": "on-headers",
        "rawSpec": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
        "spec": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
        "type": "remote"
      },
      "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium"
    ]
  ],
  "_from": "on-headers@https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
  "_id": "on-headers@1.0.2",
  "_inCache": true,
  "_location": "/appium/on-headers",
  "_phantomChildren": {},
  "_requested": {
    "raw": "on-headers@https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
    "scope": null,
    "escapedName": "on-headers",
    "name": "on-headers",
    "rawSpec": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
    "spec": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/appium",
    "/appium/morgan"
  ],
  "_resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
  "_shasum": "772b0ae6aaa525c399e489adfad90c403eb3c28f",
  "_shrinkwrap": null,
  "_spec": "on-headers@https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",
  "_where": "E:\\1-DB\\eclipse\\workspace\\BBoxTest\\node_modules\\appium",
  "author": {
    "name": "Douglas Christopher Wilson",
    "email": "doug@somethingdoug.com"
  },
  "bugs": {
    "url": "https://github.com/jshttp/on-headers/issues"
  },
  "dependencies": {},
  "description": "Execute a listener when a response is about to write headers",
  "devDependencies": {
    "eslint": "5.14.1",
    "eslint-config-standard": "12.0.0",
    "eslint-plugin-import": "2.16.0",
    "eslint-plugin-markdown": "1.0.0",
    "eslint-plugin-node": "8.0.1",
    "eslint-plugin-promise": "4.0.1",
    "eslint-plugin-standard": "4.0.0",
    "istanbul": "0.4.5",
    "mocha": "6.0.1",
    "supertest": "3.4.2"
  },
  "engines": {
    "node": ">= 0.8"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "README.md",
    "index.js"
  ],
  "homepage": "https://github.com/jshttp/on-headers#readme",
  "keywords": [
    "event",
    "headers",
    "http",
    "onheaders"
  ],
  "license": "MIT",
  "name": "on-headers",
  "optionalDependencies": {},
  "readme": "# on-headers\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][npm-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nExecute a listener when a response is about to write headers.\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install on-headers\n```\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar onHeaders = require('on-headers')\n```\n\n### onHeaders(res, listener)\n\nThis will add the listener `listener` to fire when headers are emitted for `res`.\nThe listener is passed the `response` object as it's context (`this`). Headers are\nconsidered to be emitted only once, right before they are sent to the client.\n\nWhen this is called multiple times on the same `res`, the `listener`s are fired\nin the reverse order they were added.\n\n## Examples\n\n```js\nvar http = require('http')\nvar onHeaders = require('on-headers')\n\nhttp\n  .createServer(onRequest)\n  .listen(3000)\n\nfunction addPoweredBy () {\n  // set if not set by end of request\n  if (!this.getHeader('X-Powered-By')) {\n    this.setHeader('X-Powered-By', 'Node.js')\n  }\n}\n\nfunction onRequest (req, res) {\n  onHeaders(res, addPoweredBy)\n\n  res.setHeader('Content-Type', 'text/plain')\n  res.end('hello!')\n}\n```\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## License\n\n[MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/on-headers/master\n[coveralls-url]: https://coveralls.io/r/jshttp/on-headers?branch=master\n[node-version-image]: https://badgen.net/npm/node/on-headers\n[node-version-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/on-headers\n[npm-url]: https://npmjs.org/package/on-headers\n[npm-version-image]: https://badgen.net/npm/v/on-headers\n[travis-image]: https://badgen.net/travis/jshttp/on-headers/master\n[travis-url]: https://travis-ci.org/jshttp/on-headers\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/on-headers.git"
  },
  "scripts": {
    "lint": "eslint --plugin markdown --ext js,md .",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
    "version": "node scripts/version-history.js && git add HISTORY.md"
  },
  "version": "1.0.2"
}
